name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Generate changelog
        id: changelog
        uses: requarks/changelog-action@v1
        with:
          token: ${{ github.token }}
          tag: ${{ github.ref_name }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## Changes
            ${{ steps.changelog.outputs.changes }}

            ## Docker Images
            - Backend: `zkfair/backend:${{ github.ref_name }}`
            - Frontend: `zkfair/frontend:${{ github.ref_name }}`
            - Bundler: `zkfair/bundler:${{ github.ref_name }}`

            ## Installation
            See [deployment guide](./docs/deployment-guide.md) for instructions.
          draft: false
          prerelease: false

  build-contracts:
    name: Build Smart Contracts
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Build contracts
        run: |
          cd contracts
          forge build --sizes
          
      - name: Create artifacts archive
        run: |
          cd contracts
          tar -czf ../contracts-${{ github.ref_name }}.tar.gz out/

      - name: Upload artifacts
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./contracts-${{ github.ref_name }}.tar.gz
          asset_name: contracts-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip

  build-sdk:
    name: Build and Publish SDK
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: |
          cd sdk
          npm ci

      - name: Build SDK
        run: |
          cd sdk
          npm run build

      - name: Create SDK archive
        run: |
          cd sdk
          npm pack
          mv zkfair-sdk-*.tgz ../zkfair-sdk-${{ github.ref_name }}.tgz

      - name: Upload SDK
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./zkfair-sdk-${{ github.ref_name }}.tgz
          asset_name: zkfair-sdk-${{ github.ref_name }}.tgz
          asset_content_type: application/gzip

      - name: Publish to NPM
        run: |
          cd sdk
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  docker-release:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: create-release
    strategy:
      matrix:
        service: [backend, frontend, bundler]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            zkfair/${{ matrix.service }}:${{ github.ref_name }}
            zkfair/${{ matrix.service }}:latest
            ghcr.io/zkfair/${{ matrix.service }}:${{ github.ref_name }}
            ghcr.io/zkfair/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-docs:
    name: Deploy Documentation
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Build docs
        run: |
          npm install -g @mintlify/docs
          cd docs
          mintlify build

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build

  notify:
    name: Notify Release
    runs-on: ubuntu-latest
    needs: [create-release, build-contracts, build-sdk, docker-release]
    if: always()
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          text: |
            New release published: ${{ github.ref_name }}
            See: https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }}
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}

      - name: Notify Discord
        uses: sarisia/actions-status-discord@v1
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
          title: "New Release: ${{ github.ref_name }}"
          description: |
            A new version has been released!
            [View Release](https://github.com/${{ github.repository }}/releases/tag/${{ github.ref_name }})